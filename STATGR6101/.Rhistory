hist(test != 0)
test != 0
lapply(test,function(x) x[x!=0])
x[-which(x==0)]
test[-which(test==0)]
hist(test[-which(test==0)])
?rbinom
p <- rbinom(1, p=0.5)
p <- rbinom(1,1, p=0.5)
p
rnorm_exp_AR <- function(n){
x <- rep(0,n)
for(i in 1:n){
y <- rexp(1, rate=1)
u <- runif(1, 0, 1)
rhoY <- exp(-1/2)*exp(-0.5*y**2+y)
if (u < rhoY){
p <- rbinom(1,1, p=0.5)
if (p == 0){
x[i]<- -y
}
elif{
rnorm_exp_AR <- function(n){
x <- rep(0,n)
for(i in 1:n){
y <- rexp(1, rate=1)
u <- runif(1, 0, 1)
rhoY <- exp(-1/2)*exp(-0.5*y**2+y)
if (u < rhoY){
p <- rbinom(1,1, p=0.5)
if (p == 0){
x[i]<- -y
}
else{
x[i]<- y
}
}
}
return(x)
}
test<- rnorm_exp_AR(1000)
sum(test != 0)/1000
hist(test[-which(test==0)])
hist(test[-which(test==0)])
title("Sampled distribution for N(0,1)")
hist(test[-which(test==0)], main="Sampled distribution for N(0,1)")
rnorm_exp_AR <- function(n){
x <- rep("NA",n)
for(i in 1:n){
y <- rexp(1, rate=1)
u <- runif(1, 0, 1)
rhoY <- exp(-1/2)*exp(-0.5*y**2+y)
if (u < rhoY){
p <- rbinom(1,1, p=0.5)
if (p == 0){
x[i]<- -y
}
else{
x[i]<- y
}
}
}
return(x)
}
test<- rnorm_exp_AR(1000)
sum(test != "NA")/1000
hist(test[-which(test=="NA")], main="Sampled distribution for N(0,1)")
test
hist(test[-which(test==NA)], main="Sampled distribution for N(0,1)")
hist(test[-which(test==NA)], main="Sampled distribution for N(0,1)")
test<- rnorm_exp_AR(1000)
sum(test != NA)/1000
test<- rnorm_exp_AR(1000)
sum(na.omit(test)/1000
test<- rnorm_exp_AR(1000)
sum(na.omit(test))/1000
test<- rnorm_exp_AR(1000)
sum(test, na.rm=TRUE)/1000
test<- rnorm_exp_AR(1000)
sum(test/1000
test<- rnorm_exp_AR(1000)
sum(test)/1000
test<- rnorm_exp_AR(1000)
sum(test, na.rm=TRUE)/1000
test<- rnorm_exp_AR(1000)
test<-test[!is.na(x)]
test<- rnorm_exp_AR(1000)
test<-test[!is.na(x)]
sum(test)/1000
test
test<- rnorm_exp_AR(1000)
sum(test != NA)/1000
test != NA
test != "NA"
test<- rnorm_exp_AR(1000)
sum(test != "NA")/1000
hist(test[which(test !="NA")], main="Sampled distribution for N(0,1)")
test[which(test !="NA")]
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)")
hist(as.numeric(test[which(test !="NA")], ylab="samples"), main="Sampled distribution for N(0,1)")
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", ylab="samples")
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", ylab="samples")
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
lines(dnorm(seq(-4,4,by = .2),0,1))
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
lines(x, dnorm(x,0,1))
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
plot(x, dnorm(x,0,1))
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
plot(x, dnorm(x,0,1), add=TRUE)
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
lines(dnorm(x,0,1), col="red")
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
lines(x = dnorm(x,0,1), col="red")
lines(x = dnorm(x,0,1), col="red")
plot()
lines(x = dnorm(x,0,1), col="red")
plot(x = dnorm(x,0,1), col="red")
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
curve(x = dnorm(x,0,1), col="red")
hist(as.numeric(test[which(test !="NA")]), main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
curve(dnorm(x,0,1), col="red", add=TRUE)
hist(as.numeric(test[which(test !="NA")]), freq=FALSE, main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
curve(dnorm(x,0,1), col="red", add=TRUE)
test<- rnorm_exp_AR(n)
sum(test != "NA")/n
hist(as.numeric(test[which(test !="NA")]), freq=FALSE, main="Sampled distribution for N(0,1)", xlab="samples")
x <- seq(-4,4,by = .2)
curve(dnorm(x,0,1), col="red", add=TRUE)
file <- "/Users/clairehe/Downloads/IST_corrected.txt"
read.table(file, sep=",")
file <- "/Users/clairehe/Downloads/IST_corrected.txt"
read.table(file, sep=",", header=TRUE)
file <- "/Users/clairehe/Downloads/IST_corrected.txt"
ist_data <- read.table(file, sep=",", header=TRUE)
head(ist_data)
pos(birthrates$Year - myknots[1])
View(mybasis)
ist_data[, c(1,2,3)]
knitr::opts_chunk$set(echo=TRUE)
pos <- function(x){x*(x>0)}
mybasis = cbind('int'=1, 'x_1' = birthrates$Year,
'x_2' = pos(birthrates$Year - myknots[1]),
'x_3' = pos(birthrates$Year - myknots[2]),
'x_4' = pos(birthrates$Year - myknots[3]))
par(mar = c(2,2,2,0))
matplot(birthrates$Year, mybasis[,-1], type="l", lty=1, lwd=2)
title('Spline basis functions')
pos <- function(x){x*(x>0)}
mybasis = cbind('int'=1, 'x_1' = birthrates$Year,
'x_2' = pos(birthrates$Year - myknots[1]),
'x_3' = pos(birthrates$Year - myknots[2]),
'x_4' = pos(birthrates$Year - myknots[3]))
par(mar = c(2,2,2,0))
matplot(birthrates$Year, mybasis[,-1], type="l", lty=1, lwd=2)
title('Spline basis functions')
lmfit <- lm(Birthrate ~ splines::bs(Year, degree=1, knots=myknots), data=birthrates)
plot(birthrates,pch=19, col='darkorange')
lines(birthrates$Year, lmfit$fitted.values, lty=1, col='deepskyblue', lwd=2)
lmfit <- lm(Birthrate ~ splines::bs(Year, degree=3, knots=myknots), data=birthrates)
plot(birthrates,pch=19, col='darkorange')
lines(birthrates$Year, lmfit$fitted.values, lty=1, col='deepskyblue', lwd=2)
View(birthrates)
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(fit, seq(1960,2020)$y, col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(fit, seq(1960,2020))$y, col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(fit, col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(fit, seq(1960,2020)), col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(fit, seq(1960,2020)), col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(fit, seq(1960,2020), col='deepskyblue', lty=1,lwd=3))
?predict
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(seq(1960,2020),fit,  col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(seq(1960, 2020), predict(birthrates$Year,fit,  col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(birthrates$Year, predict(birthrates$Year,fit,  col='deepskyblue', lty=1,lwd=3))
birthrates$Year
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
lines(birthrates$Year, predict(fit,birthrates$Year,  col='deepskyblue', lty=1,lwd=3))
fit = smooth.spline(birthrates$Year, birthrates$Birthrate)
plot(birthrates$Year, birthrates$Birthrate, pch=19)
#lines(birthrates$Year, predict(fit, birthrates$Year,  col='deepskyblue', lty=1,lwd=3))
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=F, as.is=T)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=F, as.is=T)
head(csv)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T, as.is=T)
head(csv)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T, as.is=T)
head(csv)
data <- as.matrix(csv)
heatmap(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(csv)
heatmap(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(csv.isna())
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(isna(csv))
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
heatmap(data)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(as.integer(is.na(csv)))
heatmap(data)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.integer(as.matrix(is.na(csv)))
heatmap(data)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.integer(as.matrix(as.logical(is.na(csv))))
heatmap(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(as.integer(as.logical(is.na(csv))))
heatmap(data)
data
is.na(cscv)
is.na(csv)
as.matrix(is.na(csv))
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
data[,cols] <- lapply(data[,cols], as.numeric)
cols
length(cols)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(t(is.na(csv)))
cols <- sapply(data, is.logical)
data[,cols] <- lapply(data[,cols], as.numeric)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
data[,cols] <- lapply(data[,cols], as.numeric)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- t(as.matrix(is.na(csv)))
cols <- sapply(data, is.logical)
data[,cols] <- lapply(data[,cols], as.numeric)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
data[,cols] <- lapply(data[,cols], as.numeric)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
data[cols,] <- lapply(data[,cols], as.numeric)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
data[cols] <- lapply(data[cols], as.numeric)
heatmap(data)
data
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
data[cols,] <- lapply(data[cols,], as.numeric)
View(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
head(cols)
data[,cols] <- lapply(data[,cols], as.numeric)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(t(data), is.logical)
head(cols)
data[,cols] <- lapply(data[,cols], as.numeric)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
cols <- sapply(data, is.logical)
head(cols)
data[,cols] <- lapply(data[,cols], as.numeric)
as.integer(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
data1 <- as.integer(data)
heatmap(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
data[,cols]<- as.integer(data[,cols])
length(data)
length(t(data))
View(data)
data.cols
ncol(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data)
csv = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(csv)
data <- as.matrix(is.na(csv))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data,Colv = NA, Rowv = NA, scale="column")
View(data)
View(csv)
ucldf
ucldf = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(ucldf)
data <- as.matrix(is.na(ucldf))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data,Colv = NA, Rowv = NA, scale="column")
ucldf
sum(is.na(ucldf))
rowSum(is.na(ucldf))
rowSums(is.na(ucldf))
colSums(is.na(ucldf))
ucldf = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
head(ucldf)
data <- as.matrix(is.na(ucldf))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data,Colv = NA, Rowv = NA, scale="column", sort=TRUE)
tinytex::install_tinytex()
ucldf = read.csv("/Users/clairehe/Downloads/UEFA_CL_Player_stats.csv", header=T)
ucldf = read.csv("/Users/clairehe/Desktop/UEFA_CL_Player_stats.csv", header=T)
head(ucldf)
data <- as.matrix(is.na(ucldf))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data,Colv = NA, Rowv = NA, scale="column")
View(ucldf)
is.na(ucldf)
ucldf[is.na(ucldf)==TRUE]
ucldf[is.na(ucldf$aerialDuelsWon)==TRUE]
ucldf$aerialDuelsWon
ucldf[ucldf$aerialDuelsWon=="NA"]
ucldf[ucldf$aerialDuelsWon=="NA",]
ucld$Xf[ucldf$aerialDuelsWon=="NA",]
ucldf$X[ucldf$aerialDuelsWon=="NA",]
ucldf[ucldf$aerialDuelsWon=="NA",]$X
ucldf[ucldf$aerialDuelsWon=="NA",]
ucldf[ucldf$X=="NA",]
ucldf <- ucldf[ucldf$X !="NA",]
colSums(is.na(ucldf))
ucldf$name
ucldf
ucldf <- ucldf[ucldf$X =="NA",]
ucldf <- ucldf[ucldf$X !="NA",]
colSums(is.na(ucldf))
library(zoo)
ucldf = read.csv("/Users/clairehe/Desktop/UEFA_CL_Player_stats.csv", header=T)
head(ucldf)
data <- as.matrix(is.na(ucldf))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data,Colv = NA, Rowv = NA, scale="column")
ucldf <- ucldf[ucldf$X !="NA",]
ucldf = read.csv("/Users/clairehe/Desktop/UEFA_CL_Player_stats.csv", header=T)
head(ucldf)
data <- as.matrix(is.na(ucldf))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data,Colv = NA, Rowv = NA, scale="column")
colSums(is.na(ucldf))
ucldf
ucldf[1,]
ucldf[,1]
ucldf[ucldf$savesCaught == "NA"]
ucldf[,ucldf$savesCaught == "NA"]
ucldf[ucldf$savesCaught == "NA",]
ucldf[ucldf$savesCaught == NA,]
which(is.na(ucldf$savesParried), arr.ind=TRUE)
ucldf[which(is.na(ucldf$savesParried), arr.ind=TRUE),]
nadf<- ucldf[which(is.na(ucldf$savesParried), arr.ind=TRUE),]
View(nadf)
summary(panel)
nadf<- ucldf[which(is.na(ucldf$savesParried), arr.ind=TRUE),]
nadf
install.packages(c("leaps", "faraway"))
install.packages("olsrr")
install.packages("ggpubr")
install.packages("tidyverse")
install.packages("ggpubr")
install.packages(c("leaps", "faraway"))
install.packages("olsrr")
install.packages("ggpubr")
install.packages("tidyverse")
install.packages(c("leaps", "faraway"))
install.packages("olsrr")
install.packages("ggpubr")
install.packages("tidyverse")
library(ggpubr)
library(gtable)
library(leaps)
library(ggplot2)
library(olsrr)
library(glmnet)
library(boot)
library(car)
library(dplyr)
library(ggpubr)
library(gtable)
library(leaps)
library(ggplot2)
library(olsrr)
library(glmnet)
library(boot)
library(dplyr)
ucldf = read.csv("/Users/clairehe/Desktop/UEFA_CL_Player_stats.csv", header=T)
head(ucldf)
data <- as.matrix(is.na(ucldf))
for (cols in 1:length(ncol)){
data[,cols]<- as.integer(data[,cols])
}
heatmap(data,Colv = NA, Rowv = NA, scale="column")
summary(ucldf)
describe(ucldf)
info(ucldf)
summary(ucldf)
plot(ucldf)
plot(nadf)
sapply(ucldf, class)
ucldf %>% dplyr::select(where(is.numeric))
num_sub <- ucldf %>% dplyr::select(where(is.numeric))
num_sub <- ucldf %>% dplyr::select(where(is.numeric))
plot(num_sub)
num_sub <- ucldf %>% dplyr::select(where(is.numeric))
plot(num_sub)
library(ggpubr)
library(gtable)
library(leaps)
library(ggplot2)
library(olsrr)
library(glmnet)
library(boot)
library(plotly)
install.packages(c("leaps", "faraway"))
install.packages("olsrr")
install.packages("ggpubr")
install.packages("tidyverse")
install.packages("plotly")
library(ggpubr)
library(gtable)
library(leaps)
library(ggplot2)
library(olsrr)
library(glmnet)
library(boot)
library(plotly)
library(ggpubr)
library(gtable)
library(leaps)
library(ggplot2)
library(olsrr)
library(glmnet)
library(boot)
library(GGally)
library(dplyr)
num_sub <- ucldf %>% dplyr::select(where(is.numeric))
ggpairs(num_sub)
